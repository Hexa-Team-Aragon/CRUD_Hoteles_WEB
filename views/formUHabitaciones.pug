extends ./layout/index.pug
block compartircontenido 
  .container-fluid.p-4.superposicion
    .container-fluid
      h2.fs-4.p-0.text-center.mb-3 Editar Habitacion
      .container-fluid.d-flex.justify-content-center.row
        .row.justify-content-center
              .alert.alert-dismissible.alert-info.col-8
                button.btn-close(type='button' data-bs-dismiss='alert')
                strong="Cuando termines presiona el boton 'Guardar datos'."
        if(errores)
          each error in errores 
            .row.justify-content-center
              .alert.alert-dismissible.alert-primary.col-5
                button.btn-close(type='button' data-bs-dismiss='alert')
                strong=error.mensaje
        form.col-8.fondoNaranjaPastel.p-3.rounded.d-flex.flex-column(action="/habitaciones/update?id="+habitacion.id method="POST")
          .form-group.mb-3
              label(for="id_hotel") Nombre del Hotel
              select(placeholder="Ingresa el nombre del hotel", name="id_hotel",class="form-control" disabled)
                each hotel in hoteles
                  option(value=hotel.id selected=hotel.opcion)=hotel.nombre 
          .form-group.mb-3
            label(for="tipo") Tipo de habitacion
            select(id="tipo" placeholder="Ingresa el nombre del hotel" name="tipo" class="form-control" disabled)
              option(value="SIMPLE" selected=sml) SIMPLE 
              option(value="MATRIMONIAL" selected=mat) MATRIMONIAL 
              option(value="PREMIUM" selected=pre) PREMIUM 
          
          .form-check.mb-3 
            input#flexCheckChecked.form-check-input(type='checkbox', name='refrigerador', checked=habitacion.refri)
            label.form-check-label(for='flexCheckChecked') Refrigerador 
          input.btn.btn-success.btn-block(type="submit", value='Guardar Cambios')


        .container-fluid.d-flex.justify-content-center.row
        .d-flex.fondoNaranjaPastel.col-8.p-3.rounded.mt-3.flex-column
          .fondoAzulPastel.p-2.rounded.col-12
            p.fs-5.text-center Imagenes Actuales
            .contenedorImages.d-flex.flex-wrap
              each img in imagenes 
                .d-flex.p-2.col-6
                  .d-flex.imagenHotel.col-12.align-items-end.rounded(style="background-image: url('/uploads/habitaciones/"+img.nombre+"');")
                    .container.d-flex.justify-content-end.pb-2
                      a.btn.btn-primary.mx-2.p-1(href=`/habitaciones/delete/img?id=${habitacion1}&nombre=${img.nombre}`) Eliminar
          .col-12.d-flex.justify-content-center
            form.col-5.p-3.rounded.d-flex.flex-column.align-items-center(action="/habitacion/create/upload?hbt="+habitacion1+"&edit=true" method="POST" enctype="multipart/form-data")
              .form-group.mb-3
                #src-file2.file-select
                  input(type='file' name='imagen' aria-label='Imagen' id='seleccionArchivos' multiple)
              #archivos.p-2.mb-2.d-flex
              .d-flex.justify-content-center
                input.btn.btn-success.btn-block(type="submit", value='Subir Imagenes', id='boton')
  script.
    const imgs = !{JSON.stringify(imagenes)}
    const hbtt = #{habitacion.id}
    const contenedor = document.querySelector('#archivos')
    const seleccionArchivos = document.querySelector("#seleccionArchivos")
    const botonEnviar = document.querySelector("#boton")
    botonEnviar.disabled = true
    let imagenes = []
    const renderImg = (imagen) => {
      const newImg = document.createElement('img')
      newImg.setAttribute('src', URL.createObjectURL(imagen))
      newImg.setAttribute('width', '200')
      newImg.setAttribute('height', '200')
      newImg.setAttribute('style', "margin-left: 15px; margin-bottom: 15px;")
      contenedor.appendChild(newImg)
    }
    seleccionArchivos.addEventListener("change", () => {
      botonEnviar.disabled = true
      contenedor.innerHTML = ''
      imagenes = []
      const archivos = seleccionArchivos.files;
      if (!archivos || !archivos.length) {
        botonEnviar.disabled = true
        return;
      }
      boton.disabled = false
      for (let i = 0; i < archivos.length; i++) {
        imagenes.push(archivos[i])
      }
      let dont = 0
      let copias = []
      for (let i = 0; i < imagenes.length; i++) {
        let nombre = hbtt + "-" + imagenes[i].name
        imgs.forEach(x => {
          if (x.nombre === nombre) {
            copias.push(imagenes[i].name)
          }
        })
        if (imagenes[i].size >= 1000000) {
          dont++
        }
      }
      if (copias.length !== 0) {
        for (let i = 0; i < copias.length; i++) {
          const newTexto = document.createElement('p')
          newTexto.innerHTML = copias[i] + " ya existe seleccione otra."
          contenedor.appendChild(newTexto)
        }
        botonEnviar.disabled = true
      } else {
        if (dont === 0) {
          for (let i = 0; i < imagenes.length; i++) {
            renderImg(imagenes[i])
          }
        } else {
          const newTexto = document.createElement('p')
          newTexto.innerHTML = "Selecciona imagenes con un tamaÃ±o inferior a 1mb."
          newTexto.setAttribute('style', "margin-left: 15px; margin-bottom: 15px;")
          contenedor.appendChild(newTexto)
          botonEnviar.disabled = true
        }
      }
    })
